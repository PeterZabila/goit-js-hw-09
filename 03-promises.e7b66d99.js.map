{"mappings":"AAAA,IAAMA,KAAO,CACXC,OAAQC,SAASC,cAAc,SAC/BC,WAAYF,SAASC,cAAc,uBACnCE,YAAaH,SAASC,cAAc,wBACpCG,UAAWJ,SAASC,cAAc,uBAKpC,SAASI,SAASC,GAChBA,EAAEC,iBAEF,IAAMC,EAAQC,OAAOX,KAAKI,WAAWQ,OAC/BC,EAASF,OAAOX,KAAKK,YAAYO,OACjCE,EAAOH,OAAOX,KAAKM,UAAUM,OACnCG,QAAQC,IAAIN,EAAOG,EAAQC,GAE3B,IAAI,IAAIG,EAAW,EAAGA,EAAWJ,EAAQI,GAAY,EAGnDC,cAAcD,EAAUP,GAAOS,MAAK,SAAAC,OAAGC,EAAQD,EAARC,SAAUC,EAAKF,EAALE,MAC7CP,QAAQC,IAAK,uBAAuCO,OAAfF,EAAS,QAAYE,OAAND,EAAM,UAE3DE,OAAM,SAAAJ,OAAGC,EAAQD,EAARC,SAAUC,EAAKF,EAALE,MAClBP,QAAQC,IAAK,sBAAoCO,OAAfF,EAAS,QAAYE,OAAND,EAAM,UAK/D,SAASJ,cAAcG,EAAUC,GAC/B,OAAO,IAAIG,SAAQ,SAACC,EAASC,GACzB,IAAMC,EAAgBC,KAAKC,SAAW,GAChChB,EAAOH,OAAOX,KAAKM,UAAUM,OAC7BmB,EAAYV,EAAWP,EAAOQ,EAEtCU,YAAW,WACLJ,EACFF,EAAQ,CAACL,SAAAA,EAAUC,MAAOS,IAE1BJ,EAAO,CAACN,SAAAA,EAAUC,MAAOS,MAG1BA,MAnCP/B,KAAKC,OAAOgC,iBAAiB,SAAU1B","sources":["src/js/03-promises.js"],"sourcesContent":["const refs = {\n  submit: document.querySelector('.form'),\n  inputDelay: document.querySelector('input[name=\"delay\"]'),\n  inputAmount: document.querySelector('input[name=\"amount\"]'),\n  inputStep: document.querySelector('input[name=\"step\"]'),\n};\n\nrefs.submit.addEventListener('submit', onSubmit)\n\nfunction onSubmit(e) {\n  e.preventDefault();\n  \n  const delay = Number(refs.inputDelay.value);\n  const amount = Number(refs.inputAmount.value);\n  const step = Number(refs.inputStep.value);\n  console.log(delay, amount, step);\n\n  for(let position = 0; position < amount; position += 1) {\n\n   \n    createPromise(position, delay).then(({ position, delay }) => {\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n      const shouldResolve = Math.random() > 0.3;\n      const step = Number(refs.inputStep.value);\n      const stepDelay = position * step + delay;\n    \n    setTimeout(() => {\n      if (shouldResolve) {      \n        resolve({position, delay: stepDelay});\n      } else {\n        reject({position, delay: stepDelay});\n      }\n     \n    }, stepDelay)\n  });\n};\n\n\n\n\n\n\n\n\n\n\n\n\n\n"],"names":["refs","submit","document","querySelector","inputDelay","inputAmount","inputStep","onSubmit","e","preventDefault","delay1","Number","value","amount","step","console","log","position1","createPromise","then","param","position","delay","concat","catch","Promise","resolve","reject","shouldResolve","Math","random","stepDelay","setTimeout","addEventListener"],"version":3,"file":"03-promises.e7b66d99.js.map"}